{"ast":null,"code":"var _jsxFileName = \"/Users/admon/Documents/program/react/ReadMe-Editor/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Editor from \"./components/Editor\";\nimport { data } from \"./data\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [notes, setNotes] = React.useState(() => JSON.parse(localStorage.getItem(\"notes\")) || []);\n  const [currentNoteId, setCurrentNoteId] = React.useState(notes[0] && notes[0].id || \"\");\n  React.useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n  function updateNote(text) {\n    setNotes(oldNotes => {\n      const newArray = [];\n      for (let i = 0; i < oldNotes.length; i++) {\n        const oldNote = oldNotes[i];\n        if (oldNote.id === currentNoteId) {\n          newArray.unshift({\n            ...oldNote,\n            body: text\n          });\n        } else {\n          newArray.push(oldNote);\n        }\n      }\n      return newArray;\n    });\n  }\n  function deleteNote(event, noteId) {\n    event.stopPropagation();\n    setNotes(oldArray => oldArray.filter(note => note.id !== noteId));\n  }\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId;\n    }) || notes[0];\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        deleteNote: deleteNote,\n        notes: notes,\n        currentNote: findCurrentNote(),\n        setCurrentNoteId: setCurrentNoteId,\n        newNote: createNewNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), currentNoteId && notes.length > 0 && /*#__PURE__*/_jsxDEV(Editor, {\n        currentNote: findCurrentNote(),\n        updateNote: updateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"rSLk0KE7DXHFOml0sBapXmkfaSY=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Sidebar","Editor","data","Split","nanoid","jsxDEV","_jsxDEV","App","_s","notes","setNotes","useState","JSON","parse","localStorage","getItem","currentNoteId","setCurrentNoteId","id","useEffect","setItem","stringify","createNewNote","newNote","body","prevNotes","updateNote","text","oldNotes","newArray","i","length","oldNote","unshift","push","deleteNote","event","noteId","stopPropagation","oldArray","filter","note","findCurrentNote","find","children","sizes","direction","className","currentNote","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/admon/Documents/program/react/ReadMe-Editor/src/App.js"],"sourcesContent":["import React from \"react\"\nimport Sidebar from \"./components/Sidebar\"\nimport Editor from \"./components/Editor\" \nimport { data } from \"./data\"\nimport Split from \"react-split\"\nimport {nanoid} from \"nanoid\"\n\nexport default function App() {\n \n    const [notes, setNotes] = React.useState(()=>JSON.parse(localStorage.getItem(\"notes\"))|| []);\n    const [currentNoteId, setCurrentNoteId] = React.useState(\n      (notes[0] && notes[0].id) || \"\"\n      );\n      \n    React.useEffect(()=>{\n      localStorage.setItem(\"notes\",JSON.stringify(notes))\n    },[notes]);\n      \n      \n    function createNewNote() {\n        const newNote = {\n          id: nanoid(),\n            body: \"# Type your markdown note's title here\"\n        }\n        setNotes(prevNotes => [newNote, ...prevNotes])\n        setCurrentNoteId(newNote.id)\n    }\n    \n    function updateNote(text) {\n        setNotes(oldNotes => {\n            const newArray=[]\n            for (let i=0; i < oldNotes.length;i++){\n                const oldNote=oldNotes[i];\n                if(oldNote.id === currentNoteId){\n                    newArray.unshift({...oldNote , body: text})\n                }else{\n                    newArray.push(oldNote)\n                }\n            }\n            return newArray\n        })\n    }\n\n\n    function deleteNote(event, noteId) {\n        event.stopPropagation() \n        \n        setNotes( oldArray => oldArray.filter(note => note.id !== noteId)\n        )\n\n    }\n\n\n    \n    function findCurrentNote() {\n        return notes.find(note => {\n            return note.id === currentNoteId\n        }) || notes[0]\n    }\n    \n    return (\n        <main>\n        {\n            notes.length > 0 \n            ?\n            <Split \n                sizes={[30, 70]} \n                direction=\"horizontal\" \n                className=\"split\"\n            >\n                <Sidebar\n                    deleteNote={deleteNote}\n                    notes={notes}\n                    currentNote={findCurrentNote()}\n                    setCurrentNoteId={setCurrentNoteId}\n                    newNote={createNewNote}\n                />\n                {\n                    currentNoteId && \n                    notes.length > 0 &&\n                    <Editor \n                        currentNote={findCurrentNote()} \n                        updateNote={updateNote} \n                    />\n                }\n            </Split>\n            :\n            <div className=\"no-notes\">\n                <h1>You have no notes</h1>\n                <button \n                    className=\"first-note\" \n                    onClick={createNewNote}\n                >\n                    Create one now\n                </button>\n            </div>\n            \n        }\n        </main>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,IAAI,QAAQ,QAAQ;AAC7B,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAAQC,MAAM,QAAO,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAE1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,MAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAG,EAAE,CAAC;EAC5F,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,KAAK,CAACY,QAAQ,CACrDF,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACS,EAAE,IAAK,EAAE,CAC9B;EAEHnB,KAAK,CAACoB,SAAS,CAAC,MAAI;IAClBL,YAAY,CAACM,OAAO,CAAC,OAAO,EAACR,IAAI,CAACS,SAAS,CAACZ,KAAK,CAAC,CAAC;EACrD,CAAC,EAAC,CAACA,KAAK,CAAC,CAAC;EAGV,SAASa,aAAaA,CAAA,EAAG;IACrB,MAAMC,OAAO,GAAG;MACdL,EAAE,EAAEd,MAAM,EAAE;MACVoB,IAAI,EAAE;IACV,CAAC;IACDd,QAAQ,CAACe,SAAS,IAAI,CAACF,OAAO,EAAE,GAAGE,SAAS,CAAC,CAAC;IAC9CR,gBAAgB,CAACM,OAAO,CAACL,EAAE,CAAC;EAChC;EAEA,SAASQ,UAAUA,CAACC,IAAI,EAAE;IACtBjB,QAAQ,CAACkB,QAAQ,IAAI;MACjB,MAAMC,QAAQ,GAAC,EAAE;MACjB,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGF,QAAQ,CAACG,MAAM,EAACD,CAAC,EAAE,EAAC;QAClC,MAAME,OAAO,GAACJ,QAAQ,CAACE,CAAC,CAAC;QACzB,IAAGE,OAAO,CAACd,EAAE,KAAKF,aAAa,EAAC;UAC5Ba,QAAQ,CAACI,OAAO,CAAC;YAAC,GAAGD,OAAO;YAAGR,IAAI,EAAEG;UAAI,CAAC,CAAC;QAC/C,CAAC,MAAI;UACDE,QAAQ,CAACK,IAAI,CAACF,OAAO,CAAC;QAC1B;MACJ;MACA,OAAOH,QAAQ;IACnB,CAAC,CAAC;EACN;EAGA,SAASM,UAAUA,CAACC,KAAK,EAAEC,MAAM,EAAE;IAC/BD,KAAK,CAACE,eAAe,EAAE;IAEvB5B,QAAQ,CAAE6B,QAAQ,IAAIA,QAAQ,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACvB,EAAE,KAAKmB,MAAM,CAAC,CAChE;EAEL;EAIA,SAASK,eAAeA,CAAA,EAAG;IACvB,OAAOjC,KAAK,CAACkC,IAAI,CAACF,IAAI,IAAI;MACtB,OAAOA,IAAI,CAACvB,EAAE,KAAKF,aAAa;IACpC,CAAC,CAAC,IAAIP,KAAK,CAAC,CAAC,CAAC;EAClB;EAEA,oBACIH,OAAA;IAAAsC,QAAA,EAEInC,KAAK,CAACsB,MAAM,GAAG,CAAC,gBAEhBzB,OAAA,CAACH,KAAK;MACF0C,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,CAAE;MAChBC,SAAS,EAAC,YAAY;MACtBC,SAAS,EAAC,OAAO;MAAAH,QAAA,gBAEjBtC,OAAA,CAACN,OAAO;QACJmC,UAAU,EAAEA,UAAW;QACvB1B,KAAK,EAAEA,KAAM;QACbuC,WAAW,EAAEN,eAAe,EAAG;QAC/BzB,gBAAgB,EAAEA,gBAAiB;QACnCM,OAAO,EAAED;MAAc;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzB,EAEEpC,aAAa,IACbP,KAAK,CAACsB,MAAM,GAAG,CAAC,iBAChBzB,OAAA,CAACL,MAAM;QACH+C,WAAW,EAAEN,eAAe,EAAG;QAC/BhB,UAAU,EAAEA;MAAW;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEF,gBAER9C,OAAA;MAAKyC,SAAS,EAAC,UAAU;MAAAH,QAAA,gBACrBtC,OAAA;QAAAsC,QAAA,EAAI;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC1B9C,OAAA;QACIyC,SAAS,EAAC,YAAY;QACtBM,OAAO,EAAE/B,aAAc;QAAAsB,QAAA,EAC1B;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGH;AAEf;AAAC5C,EAAA,CA7FuBD,GAAG;AAAA+C,EAAA,GAAH/C,GAAG;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}