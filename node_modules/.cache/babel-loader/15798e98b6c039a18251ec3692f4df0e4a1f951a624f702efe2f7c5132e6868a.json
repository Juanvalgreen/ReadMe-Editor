{"ast":null,"code":"var _jsxFileName = \"/Users/admon/Documents/program/react/readmeeditor/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Editor from \"./components/Editor\";\nimport { data } from \"./data\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [notes, setNotes] = React.useState([]);\n  const [currentNoteId, setCurrentNoteId] = React.useState(notes[0] && notes[0].id || \"\");\n  React.useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, notes);\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n  function updateNote(text) {\n    setNotes(oldNotes => oldNotes.map(oldNote => {\n      return oldNote.id === currentNoteId ? {\n        ...oldNote,\n        body: text\n      } : oldNote;\n    }));\n  }\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId;\n    }) || notes[0];\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        currentNote: findCurrentNote(),\n        setCurrentNoteId: setCurrentNoteId,\n        newNote: createNewNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), currentNoteId && notes.length > 0 && /*#__PURE__*/_jsxDEV(Editor, {\n        currentNote: findCurrentNote(),\n        updateNote: updateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"soVxDWOMNAS3RinHk+J7Z3HA7JQ=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Sidebar","Editor","data","Split","nanoid","jsxDEV","_jsxDEV","App","_s","notes","setNotes","useState","currentNoteId","setCurrentNoteId","id","useEffect","localStorage","setItem","JSON","stringify","createNewNote","newNote","body","prevNotes","updateNote","text","oldNotes","map","oldNote","findCurrentNote","find","note","children","length","sizes","direction","className","currentNote","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/admon/Documents/program/react/readmeeditor/src/App.js"],"sourcesContent":["import React from \"react\"\nimport Sidebar from \"./components/Sidebar\"\nimport Editor from \"./components/Editor\" \nimport { data } from \"./data\"\nimport Split from \"react-split\"\nimport {nanoid} from \"nanoid\"\n\nexport default function App() {\n    const [notes, setNotes] = React.useState([])\n    const [currentNoteId, setCurrentNoteId] = React.useState(\n        (notes[0] && notes[0].id) || \"\"\n    )\n\n\n\n      React.useEffect(()=>{\n        localStorage.setItem(\"notes\",JSON.stringify(notes))\n      },notes)\n\n\n\n\n\n    function createNewNote() {\n        const newNote = {\n            id: nanoid(),\n            body: \"# Type your markdown note's title here\"\n        }\n        setNotes(prevNotes => [newNote, ...prevNotes])\n        setCurrentNoteId(newNote.id)\n    }\n    \n    function updateNote(text) {\n        setNotes(oldNotes => oldNotes.map(oldNote => {\n            return oldNote.id === currentNoteId\n                ? { ...oldNote, body: text }\n                : oldNote\n        }))\n    }\n    \n    function findCurrentNote() {\n        return notes.find(note => {\n            return note.id === currentNoteId\n        }) || notes[0]\n    }\n    \n    return (\n        <main>\n        {\n            notes.length > 0 \n            ?\n            <Split \n                sizes={[30, 70]} \n                direction=\"horizontal\" \n                className=\"split\"\n            >\n                <Sidebar\n                    notes={notes}\n                    currentNote={findCurrentNote()}\n                    setCurrentNoteId={setCurrentNoteId}\n                    newNote={createNewNote}\n                />\n                {\n                    currentNoteId && \n                    notes.length > 0 &&\n                    <Editor \n                        currentNote={findCurrentNote()} \n                        updateNote={updateNote} \n                    />\n                }\n            </Split>\n            :\n            <div className=\"no-notes\">\n                <h1>You have no notes</h1>\n                <button \n                    className=\"first-note\" \n                    onClick={createNewNote}\n                >\n                    Create one now\n                </button>\n            </div>\n            \n        }\n        </main>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}